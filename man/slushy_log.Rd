% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slushy_log.R
\name{slushy_log}
\alias{slushy_log}
\title{Summarized Package Environment Diagnostic}
\usage{
slushy_log(project = NULL, config = get_config(), full_report = FALSE)
}
\arguments{
\item{project}{Character. Path to the project directory. Defaults to the root of the project if `NULL`.}

\item{config}{List. The configuration object retrieved from `get_config()` that includes the `pkgs` list.}

\item{full_report}{Logical. If `TRUE`, generates a full report by running `renv::diagnostics` in addition to the summarized report. Defaults to `FALSE`.}
}
\value{
Invisible `NULL`. Outputs details in the console. The function generates either a summarized or full report.
}
\description{
The `slushy_log` function provides an overview of the package environment, 
including package usage, dependencies, and mismatches. It runs 
`renv::diagnostics` by default and can generate a custom report comparing 
library, lockfile, and package usage details.
}
\details{
This function inspects the following aspects of the package environment:
\itemize{
  \item Synchronization between the local environment and `renv` lockfile.
  \item Installed packages versus available versions in the CRAN snapshot.
  \item Usage of `DESCRIPTION` packages both used and not used in code.
  \item Packages added and removed by assessing discrepancies between config and `DESCRIPTION`.
  \item Determine whether used packages are in DESCRIPTION or its dependencies via comparison table, capturing unapproved packages
}

If `full_report` is `TRUE`, a more detailed report is generated by running `renv::diagnostics` in addition to the summarized package diagnostic.
}
\examples{
\dontrun{
# Generate a summarized package diagnostic report
slushy_log(project = "/path/to/project", full_report = FALSE)

# Generate a full package diagnostic report with `renv::diagnostics`
slushy_log(project = "/path/to/project", full_report = TRUE)
}

}
